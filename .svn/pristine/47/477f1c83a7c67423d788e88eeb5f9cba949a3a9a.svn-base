namespace BeaconPocService
{
    internal interface IBeaconHandler
    {
        AppInfo GetAppInfo(BeaconInfo beaconInfo);
    }

    public class BeaconHandler : IBeaconHandler
    {
        private readonly BeaconConfig _beaconConfig;

        public BeaconHandler(BeaconConfig beaconConfig)
        {
            _beaconConfig = beaconConfig;
        }

        public AppInfo GetAppInfo(BeaconInfo beaconInfo)
        {
            var appInfo = new AppInfo();

            if (beaconInfo.Uuid == _beaconConfig.Beacons.Uuid)
            {
                foreach (var beacon in _beaconConfig.Beacons.BeaconList)
                {
               //     Logger.LogInfo($"Major: {beacon.Major}, minor: {beacon.Minor}, AppId: {beacon.AppId}, AppName: {beacon.AppName}");


                    if ((beacon.Major == beaconInfo.Major) && (beacon.Minor == beaconInfo.Minor))
                    {
                        appInfo.Id = beacon.AppId;
                        appInfo.Name = beacon.AppName;
                        return appInfo;
                    }
                    else
                    {
                        appInfo.Id = "Hello";
                        appInfo.Name = "World";

                    }
                }
            }
            else
            {
                appInfo.Name = $"Unknown Beacon identifier {beaconInfo.Uuid}";
            }

            return appInfo;
        }
    }
}